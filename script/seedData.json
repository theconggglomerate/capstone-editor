[{
	"id": 1,
	"title": "Nulla mollis molestie lorem.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 2,
	"title": "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 3,
	"title": "Aliquam quis turpis eget elit sodales scelerisque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 4,
	"title": "Sed sagittis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 5,
	"title": "Vestibulum rutrum rutrum neque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 6,
	"title": "Suspendisse accumsan tortor quis turpis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 7,
	"title": "Praesent blandit.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 8,
	"title": "Vivamus vestibulum sagittis sapien.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 9,
	"title": "In eleifend quam a odio.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 10,
	"title": "Nulla facilisi.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 11,
	"title": "Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 12,
	"title": "Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nulla dapibus dolor vel est.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 13,
	"title": "Morbi a ipsum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 14,
	"title": "Phasellus sit amet erat.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 15,
	"title": "Maecenas leo odio, condimentum id, luctus nec, molestie sed, justo.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 16,
	"title": "In hac habitasse platea dictumst.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 17,
	"title": "Integer ac neque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 18,
	"title": "Vivamus vestibulum sagittis sapien.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 19,
	"title": "Sed ante.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 20,
	"title": "Nam nulla.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 21,
	"title": "Maecenas rhoncus aliquam lacus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 22,
	"title": "Quisque id justo sit amet sapien dignissim vestibulum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 23,
	"title": "Nullam varius.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 24,
	"title": "Maecenas rhoncus aliquam lacus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 25,
	"title": "In blandit ultrices enim.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 26,
	"title": "Pellentesque ultrices mattis odio.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 27,
	"title": "Cras in purus eu magna vulputate luctus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 28,
	"title": "Pellentesque at nulla.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 29,
	"title": "In congue.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 30,
	"title": "Aliquam non mauris.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 31,
	"title": "Sed sagittis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 32,
	"title": "Nulla ut erat id mauris vulputate elementum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 33,
	"title": "Pellentesque viverra pede ac diam.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 34,
	"title": "Duis bibendum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 35,
	"title": "Aliquam quis turpis eget elit sodales scelerisque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 36,
	"title": "Nunc purus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 37,
	"title": "Praesent blandit.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 38,
	"title": "Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 39,
	"title": "Phasellus id sapien in sapien iaculis congue.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 40,
	"title": "Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 41,
	"title": "Maecenas pulvinar lobortis est.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 42,
	"title": "Donec semper sapien a libero.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 43,
	"title": "Curabitur at ipsum ac tellus semper interdum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 44,
	"title": "Duis bibendum, felis sed interdum venenatis, turpis enim blandit mi, in porttitor pede justo eu massa.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 45,
	"title": "Donec dapibus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 46,
	"title": "Pellentesque ultrices mattis odio.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 47,
	"title": "Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 48,
	"title": "Pellentesque ultrices mattis odio.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 49,
	"title": "Nullam varius.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 50,
	"title": "Curabitur gravida nisi at nibh.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 51,
	"title": "Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 52,
	"title": "Fusce lacus purus, aliquet at, feugiat non, pretium quis, lectus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 53,
	"title": "Vestibulum rutrum rutrum neque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 54,
	"title": "Pellentesque at nulla.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 55,
	"title": "Morbi non lectus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 56,
	"title": "Morbi a ipsum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 57,
	"title": "Nulla ac enim.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 58,
	"title": "Etiam pretium iaculis justo.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 59,
	"title": "Pellentesque at nulla.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 60,
	"title": "Quisque ut erat.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 61,
	"title": "Phasellus in felis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 62,
	"title": "Fusce posuere felis sed lacus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 63,
	"title": "Suspendisse potenti.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 64,
	"title": "Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 65,
	"title": "Vivamus tortor.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 66,
	"title": "In eleifend quam a odio.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 67,
	"title": "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 68,
	"title": "Vivamus in felis eu sapien cursus vestibulum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 69,
	"title": "Aenean sit amet justo.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 70,
	"title": "Nunc purus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 71,
	"title": "Integer ac leo.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 72,
	"title": "Praesent blandit lacinia erat.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 73,
	"title": "Nam congue, risus semper porta volutpat, quam pede lobortis ligula, sit amet eleifend pede libero quis orci.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 74,
	"title": "Curabitur gravida nisi at nibh.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 75,
	"title": "Nulla facilisi.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 76,
	"title": "In hac habitasse platea dictumst.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 77,
	"title": "Maecenas pulvinar lobortis est.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 78,
	"title": "In hac habitasse platea dictumst.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 79,
	"title": "Donec vitae nisi.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 80,
	"title": "In hac habitasse platea dictumst.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 81,
	"title": "Nulla mollis molestie lorem.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 82,
	"title": "Donec posuere metus vitae ipsum.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 83,
	"title": "Quisque arcu libero, rutrum ac, lobortis vel, dapibus at, diam.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 84,
	"title": "Quisque arcu libero, rutrum ac, lobortis vel, dapibus at, diam.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 85,
	"title": "Aliquam augue quam, sollicitudin vitae, consectetuer eget, rutrum at, lorem.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 86,
	"title": "Phasellus in felis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 87,
	"title": "Nullam porttitor lacus at turpis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 88,
	"title": "Duis ac nibh.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 89,
	"title": "Praesent blandit lacinia erat.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 90,
	"title": "Etiam faucibus cursus urna.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 91,
	"title": "Maecenas leo odio, condimentum id, luctus nec, molestie sed, justo.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 92,
	"title": "Morbi quis tortor id nulla ultrices aliquet.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 93,
	"title": "Vestibulum rutrum rutrum neque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 94,
	"title": "Sed sagittis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 95,
	"title": "Vestibulum ac est lacinia nisi venenatis tristique.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 96,
	"title": "In hac habitasse platea dictumst.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 97,
	"title": "Curabitur convallis.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 98,
	"title": "Mauris sit amet eros.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}, {
	"id": 99,
	"title": "Morbi non lectus.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}]
	}
}, {
	"id": 100,
	"title": "Vivamus vel nulla eget eros elementum pellentesque.",
	"user": 1,
	"content": {
		"cells": [{
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "code",
			"content": "function rot13(c) {\n\t\t\t\treturn c.replace(/([a-m])|([n-z])/ig, function($0,$1,$2) {\n\t\t\t\t\t\treturn String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n\t\t\t\t});\n\t\t}\n\t\trot13(\"ABJURER nowhere\")"
		}, {
			"type": "markdown",
			"content": "An h1 header\n\t\t\t============\n\t\t\t\n\t\t\tParagraphs are separated by a blank line.\n\t\t\t\n\t\t\t2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\n\t\t\tlook like:\n\t\t\t\n\t\t\t\t* this one\n\t\t\t\t* that one\n\t\t\t\t* the other one\n\t\t\t\n\t\t\tNote that --- not considering the asterisk --- the actual text\n\t\t\tcontent starts at 4-columns in.\n\t\t\t\n\t\t\t> Block quotes are\n\t\t\t> written like so.\n\t\t\t>\n\t\t\t> They can span multiple paragraphs,\n\t\t\t> if you like.\n\t\t\t\n\t\t\tUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\n\t\t\tin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\n\t\t\tUnicode is supported. ☺\n\t\t\t"
		}]
	}
}]
